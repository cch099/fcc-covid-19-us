!function(){"use strict";const e=1621740433559,t=`cache${e}`,s=["/client/client.afd7f9b8.js","/client/inject_styles.5607aec6.js","/client/client.198e2d62.js","/client/index.c96b0906.js","/client/CovidChart.bc9b89a7.js","/client/about.cb397161.js","/client/[state].5d1b0c72.js"].concat(["/service-worker-index.html","/favicon.png","/global.css","/logo.jpg"]),c=new Set(s);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(s))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const s of e)s!==t&&await caches.delete(s);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const s=new URL(t.request.url);s.protocol.startsWith("http")&&(s.hostname===self.location.hostname&&s.port!==self.location.port||(s.host===self.location.host&&c.has(s.pathname)?t.respondWith(caches.match(t.request)):"only-if-cached"!==t.request.cache&&t.respondWith(caches.open(`offline${e}`).then((async e=>{try{const s=await fetch(t.request);return e.put(t.request,s.clone()),s}catch(s){const c=await e.match(t.request);if(c)return c;throw s}})))))}))}();
